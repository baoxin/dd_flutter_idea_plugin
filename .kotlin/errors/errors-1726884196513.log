kotlin version: 2.0.20
error message: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.base/java.util.ArrayList.iterator(ArrayList.java:1029)
	at org.jetbrains.kotlin.config.MavenComparableVersion$ListItem.compareTo(MavenComparableVersion.java:309)
	at org.jetbrains.kotlin.config.MavenComparableVersion.compareTo(MavenComparableVersion.java:450)
	at org.jetbrains.kotlin.config.ApiVersion.compareTo(ApiVersion.kt:25)
	at org.jetbrains.kotlin.config.LanguageVersionSettingsImpl.getFeatureSupport(LanguageVersionSettings.kt:622)
	at org.jetbrains.kotlin.config.LanguageVersionSettings.supportsFeature(LanguageVersionSettings.kt:587)
	at org.jetbrains.kotlin.resolve.calls.inference.components.ConstraintInjector.processConstraintsIgnoringForksData(ConstraintInjector.kt:193)
	at org.jetbrains.kotlin.resolve.calls.inference.components.ConstraintInjector.processConstraints(ConstraintInjector.kt:173)
	at org.jetbrains.kotlin.resolve.calls.inference.components.ConstraintInjector.processConstraints$default(ConstraintInjector.kt:168)
	at org.jetbrains.kotlin.resolve.calls.inference.components.ConstraintInjector.addSubTypeConstraintAndIncorporateIt(ConstraintInjector.kt:114)
	at org.jetbrains.kotlin.resolve.calls.inference.components.ConstraintInjector.addInitialSubtypeConstraint(ConstraintInjector.kt:71)
	at org.jetbrains.kotlin.resolve.calls.inference.model.NewConstraintSystemImpl.addSubtypeConstraint(NewConstraintSystemImpl.kt:199)
	at org.jetbrains.kotlin.fir.resolve.calls.stages.ArgumentCheckingProcessor.checkApplicabilityForArgumentType(ArgumentCheckingProcessor.kt:292)
	at org.jetbrains.kotlin.fir.resolve.calls.stages.ArgumentCheckingProcessor.resolvePlainArgumentType(ArgumentCheckingProcessor.kt:200)
	at org.jetbrains.kotlin.fir.resolve.calls.stages.ArgumentCheckingProcessor.resolvePlainArgumentType$default(ArgumentCheckingProcessor.kt:170)
	at org.jetbrains.kotlin.fir.resolve.calls.stages.ArgumentCheckingProcessor.resolvePlainArgumentType(ArgumentCheckingProcessor.kt:85)
	at org.jetbrains.kotlin.fir.resolve.calls.stages.CheckExtensionReceiver.resolveExtensionReceiver(ResolutionStages.kt:125)
	at org.jetbrains.kotlin.fir.resolve.calls.stages.CheckExtensionReceiver.check(ResolutionStages.kt:102)
	at org.jetbrains.kotlin.fir.resolve.calls.stages.ResolutionStageRunner$processCandidate$1.invokeSuspend(ResolutionStageRunner.kt:26)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at org.jetbrains.kotlin.fir.resolve.calls.stages.ResolutionStageRunner.processCandidate(ResolutionStageRunner.kt:39)
	at org.jetbrains.kotlin.fir.resolve.calls.stages.ResolutionStageRunner.processCandidate$default(ResolutionStageRunner.kt:19)
	at org.jetbrains.kotlin.fir.resolve.calls.candidate.CandidateCollector.consumeCandidate(CandidateCollector.kt:40)
	at org.jetbrains.kotlin.fir.resolve.calls.tower.TowerScopeLevelProcessor.consumeCandidate(TowerLevelHandler.kt:90)
	at org.jetbrains.kotlin.fir.resolve.calls.tower.TowerScopeLevel$TowerScopeLevelProcessor.consumeCandidate$default(TowerLevels.kt:53)
	at org.jetbrains.kotlin.fir.resolve.calls.tower.ScopeTowerLevel.consumeCallableCandidate(TowerLevels.kt:432)
	at org.jetbrains.kotlin.fir.resolve.calls.tower.ScopeTowerLevel.processFunctionsByName$lambda$6(TowerLevels.kt:455)
	at org.jetbrains.kotlin.fir.resolve.calls.tower.ScopeTowerLevel$$Lambda/0x00000003016bde90.invoke(Unknown Source)
	at org.jetbrains.kotlin.fir.scopes.impl.FirDefaultStarImportingScope.processSymbolsByName$lambda$2(FirDefaultStarImportingScope.kt:55)
	at org.jetbrains.kotlin.fir.scopes.impl.FirDefaultStarImportingScope$$Lambda/0x00000003016b5a90.invoke(Unknown Source)
	at org.jetbrains.kotlin.fir.scopes.impl.FirSingleLevelDefaultStarImportingScope.processFunctionsByName(FirSingleLevelDefaultStarImportingScope.kt:59)
	at org.jetbrains.kotlin.fir.scopes.impl.FirDefaultStarImportingScope$processFunctionsByName$1.invoke(FirDefaultStarImportingScope.kt:64)


